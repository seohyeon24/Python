# 리스트에 적용할 수 있는 기본 함수: min, max, sum

number=[273,84,23,45]
print(min(number))
print(sum(number))

# 리스트를 선언하고 뒤집습니다.
list_a=[1,2,3,4,5]
list_reversed =reversed(list_a)

#출력합니다.
print("#reversed()함수")
print("reversed([1,2,3,4,5]:",list_reversed)
print("list(reversed([1,2,3,4,5])):",list(list_reversed))
print()

# 반복문을 적용해 봅시다.
print("# reversed() 함수와 반복문")
print("for i in reversed([1,2,3,4,5]):")
for i in reversed(list_a):
    print("-",i)  # 반복문

temp = reversed([1,2,3,4,5])

for i in temp:
    print("첫 번째 반복문:{}".format(i))

for i in temp:
    print("두 번빼 반복문:{}".format(i))

# enumerate() 함수와 반복문 조합하기 #list의 요소를 반복 할 때 현재 인덱스가 몇 번 째인지 확인할 수 있도록 한다.

# 변수를 선언합니다.
example_list= ["요소 A", "요소 B", "요소 C"]

# 그냥 출력합니다.
print("# 단순 출력")
print(example_list)
print()

#enumerate() 함수를 적용해 출력합니다.
print("#enumberate()함수 적용 출력")
print(enumerate(example_list)) #enumerate 적용 함수
print()

#list() 함수로 강제 변환해 출력합니다.
print("#list() 함수로 강제 변환 출력")
print(list(enumerate(example_list)))
print()

# for 반복문과 enumerate() 함수 조합해서 사용하기
print("# 반복문과 조합하기")
for i, value in enumerate(example_list):  #enumerate()함수를 사용하면 반복 변수를 이런 형태로 넣을 수 있습니다.
    print("{}번째 요소는 {}입니다.".format(i, value))

    # # 단순 출력
    # ['요소 A', '요소 B', '요소 C']
    #
    # # enumberate()함수 적용 출력
    # < enumerate object at 0x10fef2440 >
    #
    # # list() 함수로 강제 변환 출력
    # [(0, '요소 A'), (1, '요소 B'), (2, '요소 C')]
    #
    # # 반복문과 조합하기
    # 0번째 요소는 요소 A입니다.
    # 1번째 요소는 요소 B입니다.
    # 2번째 요소는 요소 C입니다.

# 딕셔너리 items()함수와 반복문 조합하기
# 변수를 선언합니다.
example_dictionary={
    "키A": "값A",
    "키B": "값B",
    "키C": "값C",
}

# 딕셔너리의 ㅑtems() 함수 결과 출력하기
print("#딕셔너리의 items()함수")
print("items():", example_dictionary.items())
print()

# for 반복무과 items()함수 조합해서 사용하기
print("# 딕셔너리의 items()함수와 반복문 조합하기")

for key, element in example_dictionary.items():
    print("distionary[{}]={}".format(key, element))

# #딕셔너리의 items()함수
# items(): dict_items([('키A', '값A'), ('키B', '값B'), ('키C', '값C')])
#
# # 딕셔너리의 items()함수와 반복문 조합하기
# distionary[키A]=값A
# distionary[키B]=값B
# distionary[키C]=값C

# 리스트 내포: 프로그램을 만들 때는 반복문을 사용해 리스트를 재조합하는 경우가 많습니다.
# 변수를 선언합니다.
array=[]

# 반복문을 적용합니다.
for i in range(0,20,2):
    array.append(i*i) #range(0,20,2) 사이의 짝수를 구한 뒤, 제곱해서 새로운 리스트를 만든다.

# 출력합니다.
print(array)

# [0, 4, 16, 36, 64, 100, 144, 196, 256, 324]
# append - 제곱해서 새로운 리스트를 만든다.
